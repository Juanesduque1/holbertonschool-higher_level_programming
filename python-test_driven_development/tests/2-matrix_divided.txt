===============================
 Test cases for task 2
===============================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[3]], 3)
[[1.0]]

>>> matrix_divided([[3, 9], [12, 15]], -3)
[[-1.0, -3.0], [-4.0, -5.0]]

>>> matrix_divided([[3, 9], [12, 15]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[3, 9], [12, 15, 3]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, "9"], [15, 3]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3, 9], [15, 3]], "g")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[3, 9], [15, 3]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[3, float('inf')], [15, 3]], 3)
[[1.0, inf], [5.0, 1.0]]

>>> matrix_divided([[3, float('NaN')], [15, 3]], 3))
[[1.0, nan], [5.0, 1.0]]

>>> matrix_divided([[3, float('inf')], [15, 3]], float('inf'))
[[0.0, inf], [0.0, 0.0]]

>>> matrix_divided([[3, float('NaN')], [15, 3]], float('NaN'))
[[nan, nan], [nan, nan]]

>>> matrix_divided(3)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
